<?php

use \Drupal\node\Entity\Node;
use Drupal\Component\Utility\Unicode;

/**
 * Implements hook_install().
 *
 * Create the home page.
 */
/*
function ahs_miscellaneous_install() {
  // See if the home page already exists
  $query = \Drupal::entityQuery('node')
    ->condition('title', 'Home')
    ->condition('type', 'information');
  $nids = $query->execute();
  if (empty($nids)) {
    // It does not, so create it
    $node = Node::create([
      'type' => 'information',
      'title' => 'Home',
      'uid' => 1,
      'status' => 1,
      // Disable pathauto 'Generate automatic URL alias'
      // and use an alternative alias, so that we can use
      // the URL '/discuss' for something else.
      'path' => ['pathauto' => FALSE, 'alias' => '/home'],
    ]);
    $node->save();
  }
}
*/

/**
 * Implements hook_preprocess_HOOK() for nodes.
 */
function ahs_miscellaneous_preprocess_node(&$variables) {
  // Skip if the page variable is already set true.
  if (isset($variables['page']) && $variables['page']) {
    return;
  }

  // Skip if this is not the main node specified by the route
  $route_match = \Drupal::routeMatch();
  $page_node = $route_match->getParameter('node');
  if (empty($page_node) || $page_node->id() != $variables['node']->id()) {
    return;
  }

  // Skip if the route did not uses _entity_view
  $route = $route_match->getRouteObject();
  if (!$route->hasDefault('_entity_view')) {
    return;
  }

  // Skip if _entity_view did not specify a view mode
  $entity_view_string = $route->getDefault('_entity_view');
  $periodPos = strpos($entity_view_string, ".");
  if (!$periodPos) {
    return;
  }

  // If the view mode being rendered is in the route, set the page variable.
  $route_view_mode = substr($entity_view_string, $periodPos + 1);
  if ($route_view_mode == $variables['view_mode']) {
    $variables['page'] = TRUE;
  }
}

/**
 * Implementation of hook_node_presave().
 *
 */
function ahs_miscellaneous_node_presave($node) {
  ahs_miscellaneous_node_title_sanitise($node);

}

/**
 * Remove slashes and pretty up node titles.
 *
 */
function ahs_miscellaneous_node_title_sanitise($node) {
  $node->title->value = trim($node->title->value);

  // If title is all upper case and has multiple words,
  // assume the capitalisation is inappropriate
  if ((mb_strtoupper($node->title->value, 'utf-8') === $node->title->value) &&
    (strpos($node->title->value, " ") !== FALSE)
  ) {
    $node->title->value = strtolower($node->title->value);
  }

  // Always capitalise the first letter
  $node->title->value = Unicode::ucfirst($node->title->value);

  // Replace slashes with a space
  $node->title->value = str_replace('/', ' ', $node->title->value);

  // replace 2 or more spaces with single space
  $node->title->value = $s = preg_replace("/ {2,}/", " ", $node->title->value);
}

/**
 * Implements hook_element_info_alter().
 */
function ahs_miscellaneous_element_info_alter(array &$types) {
  $types['datetime']['#process'][] = 'ahs_miscellaneous_datetime_set_format';
}

/**
 * Element process callback for datetime fields.
 */
function ahs_miscellaneous_datetime_set_format($element) {
  // Remove seconds in browsers that support HTML5 type=date.
  $element['time']['#attributes']['step'] = 60;
  return $element;
}